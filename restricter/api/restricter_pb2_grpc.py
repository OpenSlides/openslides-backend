# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import restricter_pb2 as restricter__pb2


class RestrictStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.restrict = channel.unary_unary(
        '/restricter.Restrict/restrict',
        request_serializer=restricter__pb2.RestrictRequest.SerializeToString,
        response_deserializer=restricter__pb2.Restricted.FromString,
        )
    self.ids = channel.unary_unary(
        '/restricter.Restrict/ids',
        request_serializer=restricter__pb2.IDsRequest.SerializeToString,
        response_deserializer=restricter__pb2.IDs.FromString,
        )


class RestrictServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def restrict(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ids(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RestrictServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'restrict': grpc.unary_unary_rpc_method_handler(
          servicer.restrict,
          request_deserializer=restricter__pb2.RestrictRequest.FromString,
          response_serializer=restricter__pb2.Restricted.SerializeToString,
      ),
      'ids': grpc.unary_unary_rpc_method_handler(
          servicer.ids,
          request_deserializer=restricter__pb2.IDsRequest.FromString,
          response_serializer=restricter__pb2.IDs.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'restricter.Restrict', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
