name: Continuous Integration

on:
  pull_request:
    branches: [ master ]

env:
  PYTHON_VERSION: 3.8.5

jobs:
  build-production-image:
    name: Build and test production docker image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Create docker production image
      run: docker build . --tag=openslides-backend

    - name: Run docker production image
      run: docker run --detach --publish 9002:9002 --publish 9003:9003 openslides-backend

    - name: Sleep for some seconds
      run: sleep 2

    - name: Fire a test request to actions component
      run: curl -I localhost:9002/health

    - name: Fire a test request to presenter component
      run: curl -I localhost:9003/health

  build-and-test-dev-image:
    name: Build and test development docker image with Docker Compose
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Run tests
      run: dev/run-tests.sh
  
  check-models-checksum:
    name: Check the checksum of the models.yml
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install requirements
      run: pip install --requirement dev/requirements_development.txt

    - name: Check checksum
      run: make check-models

  check-coding-style-black:
    name: Check coding style with black
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install requirements
      run: pip install --requirement dev/requirements_development.txt

    - name: Check black
      run: black --check --diff openslides_backend/ tests/ cli/

  check-coding-style-isort:
    name: Check coding style with isort
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install requirements
      run: pip install --requirement dev/requirements_development.txt

    - name: Check isort
      run: isort --check-only --diff openslides_backend/ tests/ cli/

  check-coding-style-flake8:
    name: Check coding style with flake8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install requirements
      run: pip install --requirement dev/requirements_development.txt

    - name: Check flake8
      run: flake8 openslides_backend/ tests/ cli/

  check-coding-style-mypy:
    name: Check coding style with mypy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install requirements
      run: pip install --requirement dev/requirements_development.txt

    - name: Check mypy
      run: mypy openslides_backend/ tests/ cli/
